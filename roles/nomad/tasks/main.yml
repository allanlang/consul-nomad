---
# LINUX
- name: Install common packages
  package: name={{ item }}
  with_items:
    - unzip
  when: ansible_system == "Linux"

- name: Fetch and unpack Nomad distribution
  unarchive:
    dest: /usr/bin
    copy: no
    src: "https://releases.hashicorp.com/nomad/{{nomad_version}}/nomad_{{nomad_version}}_linux_amd64.zip"
    mode: 0755
    creates: /usr/bin/nomad
  when: ansible_system == "Linux"

- name: Create Nomad directories
  file: path={{ item }} state=directory mode=0755
  with_items:
    - /etc/nomad.d
    - /var/lib/nomad
  when: ansible_system == "Linux"

- name: Template server.hcl
  template:
    dest: "/etc/nomad.d/server.hcl"
    src: server.hcl.tmpl
  when:
    - ansible_system == "Linux"
    - nomad_server

- name: Template client.hcl
  template:
    dest: "/etc/nomad.d/client.hcl"
    src: client.hcl.tmpl
  when:
    - ansible_system == "Linux"
    - nomad_client

- name: Template nomad systemd service config
  template:
    dest: "/etc/systemd/system/nomad.service"
    src: systemd-nomad.tmpl
  when: ansible_system == "Linux"

- name: Start Nomad agent service
  service: name=nomad state=started enabled=yes
  when: ansible_system == "Linux"
  
# Create some example job template files

- name: Template logs job file
  template:
    dest: "/home/alang021/logs.nomad"
    src: logs.nomad.tmpl
  when: ansible_system == "Linux"

- name: Template beacon job file
  template:
    dest: "/home/alang021/beacon.nomad"
    src: beacon.nomad.tmpl
  when: ansible_system == "Linux"

# WINDOWS
- name: Windows - Configure directories
  win_file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "C:\\nomad\\bin"
    - "C:\\nomad\\data"
    - "C:\\nomad\\conf"
    - "C:\\installs"
  when: ansible_os_family == "Windows"

- name: Windows - Download Nomad
  win_get_url: 
    url: "https://releases.hashicorp.com/nomad/{{nomad_version}}/nomad_{{nomad_version}}_windows_amd64.zip"
    dest: "C:\\installs\\nomad-{{ nomad_version }}.zip"
  when: ansible_os_family == "Windows"

- name: Windows - Install consul and nomad
  win_unzip:
    src: "C:\\installs\\nomad-{{ nomad_version }}.zip"
    dest: "C:\\nomad\\bin"
    creates: "C:\\nomad\\bin\\nomad.exe"
    rm: false
  when: ansible_os_family == "Windows"

- name: Windows - Template out config files
  win_template: src="client-win.conf.tmpl" dest="C:\\nomad\\conf\\client.conf"
  when: ansible_os_family == "Windows"

- name: Windows - Install nssm
  win_chocolatey: name=nssm state=present allow_empty_checksums=true
  when: ansible_os_family == "Windows"

- name: Windows - Create nomad service
  win_nssm:
    name: Nomad
    application: "C:\\nomad\\bin\\nomad.exe"
    app_parameters:
      _: agent
      "-config": C:\nomad\conf\client.conf
    start_mode: auto
    state: started
  when: ansible_os_family == "Windows"
